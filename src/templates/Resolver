import { Arg, Mutation, Query, Resolver } from 'type-graphql'
import { {{entity}} } from './{{entity}}'
import { {{entity}}Input } from './inputs'

@Resolver(() => {{entity}})
export class {{entity}Resolver {
  @Mutation(() => SuperToken)
  async addSuperToken(@Arg('{{entityCamel}}') {{entityCamel}}Input: {{entity}}Input) {
    const superToken = SuperToken.create({
      ...{{entityCamel}}Input,
    })
    return await {{entity}}.save({{entityCamel}})
  }
  @Query(() => [{{entity}}])
  all{{entity}}(): Promise<{{entity}}[]> {
    return {{entity}}.find()
  }
}
